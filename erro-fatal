local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\72\116","\82\102\90\222\105"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v94=v10(v8(v42,49 -33 ));if v30 then local v104=v13(v94,v30);v30=nil;return v104;else return v94;end end end);local function v31(v43,v44,v45) if v45 then local v95=0;local v96;while true do if (v95==0) then v96=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v96-(v96%1) ;end end else local v97=0;local v98;while true do if (v97==0) then v98=2^(v44-1) ;return (((v43%(v98 + v98))>=v98) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + (5 -3) );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * (126505 -60969)) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v121=0;while true do if (0==v121) then v60=1;v58=0 -0 ;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end end end local function v36(v62) local v63;if  not v62 then local v99=0;while true do if (v99==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end if (v65==1) then v70=v34();v71={};for v105=1,v70 do local v106=v32();local v107;if (v106==1) then v107=v32()~=0 ;elseif (v106==2) then v107=v35();elseif (v106==3) then v107=v36();end v71[v105]=v107;end v69[3]=v32();v65=2;end if (v65==2) then for v109=1,v34() do local v110=v32();if (v31(v110,1,932 -(857 + 74) )==0) then local v117=0;local v118;local v119;local v120;while true do if (3==v117) then if (v31(v119,3,3)==(1638 -(1523 + 114))) then v120[4]=v71[v120[4]];end v66[v109]=v120;break;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then local v125=0;while true do if (v125==0) then v120[930 -(214 + 713) ]=v33();v120[2 + 2 ]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -((1 + 1)^16) ;elseif (v118==3) then v120[3]=v34() -(2^(893 -(282 + 595))) ;v120[4]=v33();end v117=2;end if (v117==0) then v118=v31(v110,2,3);v119=v31(v110,4,6);v117=1;end if (v117==2) then if (v31(v119,1,1)==1) then v120[2]=v71[v120[2]];end if (v31(v119,2,2)==1) then v120[3]=v71[v120[3]];end v117=3;end end end end for v111=1,v34() do v67[v111-1 ]=v39();end return v69;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v80=v75;local v81=v76;local v82=v77;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v100=0,v88 do if (v100>=v82) then v86[v100-v82 ]=v87[v100 + 1 ];else v90[v100]=v87[v100 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=(37 + 4)) then if (v93<=20) then if (v93<=9) then if (v93<=(5 -1)) then if (v93<=(1066 -(68 + 997))) then if (v93==0) then v90[v92[2]]=v90[v92[3]];elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=2) then local v135=v92[2];local v136,v137=v83(v90[v135](v90[v135 + (1271 -(226 + 1044)) ]));v85=(v137 + v135) -1 ;local v138=0;for v221=v135,v85 do local v222=0;while true do if (v222==0) then v138=v138 + 1 ;v90[v221]=v136[v138];break;end end end elseif (v93>3) then local v232=v92[2];local v233=v90[v232];local v234=v90[v232 + (8 -6) ];if (v234>0) then if (v233>v90[v232 + 1 ]) then v84=v92[3];else v90[v232 + 3 ]=v233;end elseif (v233<v90[v232 + 1 ]) then v84=v92[3];else v90[v232 + 3 ]=v233;end else v90[v92[2]][v90[v92[3]]]=v90[v92[121 -(32 + 85) ]];end elseif (v93<=(6 + 0)) then if (v93==5) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[1 + 1 ]]=v90[v92[3]][v92[4]];end elseif (v93<=(964 -(892 + 65))) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];elseif (v93>8) then local v238=v92[2];v90[v238]=v90[v238](v21(v90,v238 + 1 ,v92[3]));else local v240=v92[2];do return v90[v240](v21(v90,v240 + 1 ,v92[3]));end end elseif (v93<=14) then if (v93<=11) then if (v93==(23 -13)) then local v143=v92[2];local v144,v145=v83(v90[v143](v21(v90,v143 + 1 ,v85)));v85=(v145 + v143) -1 ;local v146=0 -0 ;for v223=v143,v85 do local v224=0;while true do if (v224==0) then v146=v146 + 1 ;v90[v223]=v144[v146];break;end end end else v90[v92[3 -1 ]]=v92[3];end elseif (v93<=12) then v90[v92[2]]=v90[v92[3]] + v92[4] ;elseif (v93==13) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=17) then if (v93<=15) then v90[v92[2]]=v90[v92[3]]%v92[4] ;elseif (v93==(366 -(87 + 263))) then local v242=0;local v243;while true do if (v242==0) then v243=v92[2];v90[v243](v21(v90,v243 + 1 ,v85));break;end end else local v244=0;local v245;local v246;local v247;while true do if (2==v244) then for v385=1,v92[4] do local v386=0;local v387;while true do if (v386==1) then if (v387[1]==30) then v247[v385-1 ]={v90,v387[3]};else v247[v385-1 ]={v73,v387[3]};end v89[ #v89 + 1 ]=v247;break;end if (0==v386) then v84=v84 + 1 ;v387=v80[v84];v386=1;end end end v90[v92[2]]=v40(v245,v246,v74);break;end if (0==v244) then v245=v81[v92[3]];v246=nil;v244=1;end if (v244==1) then v247={};v246=v18({},{[v7("\148\116\206\89\26\185\73","\78\203\43\167\55\126\220\49")]=function(v388,v389) local v390=0;local v391;while true do if (v390==0) then v391=v247[v389];return v391[1][v391[2]];end end end,[v7("\28\33\29\1\208\205\80\174\38\6","\202\67\126\115\100\167\164\62")]=function(v392,v393,v394) local v395=0;local v396;while true do if (v395==0) then v396=v247[v393];v396[181 -(67 + 113) ][v396[2 + 0 ]]=v394;break;end end end});v244=2;end end end elseif (v93<=(44 -26)) then v90[v92[2]]=v73[v92[3 + 0 ]];elseif (v93>19) then do return v90[v92[2]]();end else local v248=0;local v249;while true do if (0==v248) then v249=v92[2];v90[v249]=v90[v249](v21(v90,v249 + 1 ,v92[3]));break;end end end elseif (v93<=(119 -89)) then if (v93<=(977 -(802 + 150))) then if (v93<=22) then if (v93>21) then v84=v92[7 -4 ];else local v154=v92[2];do return v90[v154](v21(v90,v154 + 1 ,v92[3]));end end elseif (v93<=23) then local v155=v92[2];v90[v155](v90[v155 + 1 ]);elseif (v93==24) then local v250=0;local v251;local v252;local v253;while true do if (v250==1) then v253=0;for v397=v251,v92[3 + 1 ] do local v398=0;while true do if (v398==0) then v253=v253 + 1 ;v90[v397]=v252[v253];break;end end end break;end if (v250==0) then v251=v92[3 -1 ];v252={v90[v251](v90[v251 + 1 ])};v250=1;end end else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=(1024 -(915 + 82))) then if (v93>26) then do return v90[v92[5 -3 ]];end else local v156=0;local v157;while true do if (v156==0) then v157=v92[2];v90[v157]=v90[v157](v21(v90,v157 + 1 ,v85));break;end end end elseif (v93<=28) then local v158=0;local v159;local v160;local v161;while true do if (v158==0) then v159=v92[2];v160=v90[v159 + 2 ];v158=1;end if (v158==1) then v161=v90[v159] + v160 ;v90[v159]=v161;v158=2;end if (v158==2) then if (v160>0) then if (v161<=v90[v159 + 1 ]) then v84=v92[3];v90[v159 + 3 ]=v161;end elseif (v161>=v90[v159 + 1 ]) then local v417=0;while true do if (v417==0) then v84=v92[3];v90[v159 + 3 ]=v161;break;end end end break;end end elseif (v93>29) then v90[v92[2]]=v90[v92[3]];else v90[v92[2]]={};end elseif (v93<=35) then if (v93<=32) then if (v93==(19 + 12)) then for v225=v92[2],v92[3] do v90[v225]=nil;end else v90[v92[2]]=v74[v92[3]];end elseif (v93<=33) then local v164=0;local v165;local v166;local v167;while true do if (v164==0) then v165=v92[2 -0 ];v166=v90[v165];v164=1;end if (v164==1) then v167=v90[v165 + 2 ];if (v167>(1187 -(1069 + 118))) then if (v166>v90[v165 + 1 ]) then v84=v92[6 -3 ];else v90[v165 + 3 ]=v166;end elseif (v166<v90[v165 + 1 ]) then v84=v92[3];else v90[v165 + 3 ]=v166;end break;end end elseif (v93>34) then v90[v92[3 -1 ]]=v92[3];else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=38) then if (v93<=(7 + 29)) then v90[v92[2]]=v92[3] + v90[v92[4]] ;elseif (v93==37) then v90[v92[2]]= #v90[v92[3]];else local v262=0;local v263;local v264;while true do if (v262==1) then for v399=v263 + 1 ,v92[4] do v264=v264   .. v90[v399] ;end v90[v92[2]]=v264;break;end if (v262==0) then v263=v92[3];v264=v90[v263];v262=1;end end end elseif (v93<=(68 -29)) then local v169=v92[2 + 0 ];local v170,v171=v83(v90[v169](v21(v90,v169 + 1 ,v85)));v85=(v171 + v169) -1 ;local v172=0;for v227=v169,v85 do local v228=0;while true do if (v228==0) then v172=v172 + 1 ;v90[v227]=v170[v172];break;end end end elseif (v93==40) then local v265=v92[2];v90[v265]=v90[v265](v90[v265 + (792 -(368 + 423)) ]);else local v267=0;local v268;while true do if (0==v267) then v268=v92[2];do return v21(v90,v268,v268 + v92[3] );end break;end end end elseif (v93<=62) then if (v93<=51) then if (v93<=46) then if (v93<=(134 -91)) then if (v93>42) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v74[v92[3]]=v90[v92[2]];end elseif (v93<=44) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v93>45) then v90[v92[2]]=v73[v92[3]];elseif (v90[v92[20 -(10 + 8) ]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=48) then if (v93>47) then v84=v92[3];else do return;end end elseif (v93<=49) then v90[v92[2]]=v90[v92[3]] + v92[4] ;elseif (v93>(192 -142)) then do return v90[v92[2]];end else v90[v92[2]][v90[v92[3]]]=v92[4];end elseif (v93<=56) then if (v93<=53) then if (v93==52) then v90[v92[2]][v90[v92[3]]]=v92[4];else local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==2) then for v349=v182,v85 do v185=v185 + 1 ;v90[v349]=v183[v185];end break;end if (v181==0) then v182=v92[2];v183,v184=v83(v90[v182](v21(v90,v182 + 1 ,v92[3])));v181=1;end if (v181==1) then v85=(v184 + v182) -(443 -(416 + 26)) ;v185=0;v181=2;end end end elseif (v93<=54) then v74[v92[3]]=v90[v92[2]];elseif (v93==55) then do return v90[v92[2]]();end else v90[v92[6 -4 ]]= #v90[v92[3]];end elseif (v93<=59) then if (v93<=57) then local v188=0;local v189;local v190;while true do if (v188==0) then v189=v92[1 + 1 ];v190=v90[v189];v188=1;end if (v188==1) then for v352=v189 + 1 ,v92[3] do v15(v190,v90[v352]);end break;end end elseif (v93>(102 -44)) then v90[v92[2]]=v90[v92[3]]%v92[4] ;else local v276=v92[2];v90[v276]=v90[v276](v90[v276 + (439 -(145 + 293)) ]);end elseif (v93<=60) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==61) then local v279=0;local v280;while true do if (v279==0) then v280=v92[432 -(44 + 386) ];do return v21(v90,v280,v85);end break;end end else v90[v92[2]]=v74[v92[3]];end elseif (v93<=72) then if (v93<=67) then if (v93<=64) then if (v93==63) then local v191=v92[2];local v192=v90[v191 + (1488 -(998 + 488)) ];local v193=v90[v191] + v192 ;v90[v191]=v193;if (v192>0) then if (v193<=v90[v191 + 1 + 0 ]) then v84=v92[3];v90[v191 + 3 ]=v193;end elseif (v193>=v90[v191 + 1 ]) then v84=v92[3];v90[v191 + 3 ]=v193;end else local v195=0;local v196;local v197;while true do if (v195==1) then for v357=v196 + 1 ,v85 do v15(v197,v90[v357]);end break;end if (v195==0) then v196=v92[2];v197=v90[v196];v195=1;end end end elseif (v93<=(54 + 11)) then local v198=0;local v199;while true do if (0==v198) then v199=v92[2];do return v21(v90,v199,v85);end break;end end elseif (v93>66) then local v283=v92[774 -(201 + 571) ];local v284={v90[v283](v90[v283 + 1 ])};local v285=1138 -(116 + 1022) ;for v326=v283,v92[4] do local v327=0;while true do if (v327==0) then v285=v285 + 1 ;v90[v326]=v284[v285];break;end end end else local v286=v92[8 -6 ];local v287=v90[v92[3]];v90[v286 + 1 ]=v287;v90[v286]=v287[v92[4]];end elseif (v93<=69) then if (v93>(40 + 28)) then local v200=v92[2];v90[v200]=v90[v200]();else local v202=0;local v203;local v204;local v205;local v206;while true do if (1==v202) then v85=(v205 + v203) -1 ;v206=0;v202=2;end if (v202==0) then v203=v92[2];v204,v205=v83(v90[v203](v90[v203 + (3 -2) ]));v202=1;end if (v202==2) then for v358=v203,v85 do local v359=0;while true do if (v359==0) then v206=v206 + 1 ;v90[v358]=v204[v206];break;end end end break;end end end elseif (v93<=70) then local v207=0;local v208;local v209;local v210;while true do if (v207==0) then v208=v92[2];v209=v90[v208];v207=1;end if (1==v207) then v210=v92[3];for v360=1,v210 do v209[v360]=v90[v208 + v360 ];end break;end end elseif (v93==71) then v90[v92[2]]={};else local v292=0;local v293;while true do if (v292==0) then v293=v92[2];v90[v293]=v90[v293](v21(v90,v293 + 1 ,v85));break;end end end elseif (v93<=77) then if (v93<=74) then if (v93>73) then local v211=v92[2];local v212=v90[v92[3]];v90[v211 + (3 -2) ]=v212;v90[v211]=v212[v92[4]];else local v216=0;local v217;local v218;while true do if (1==v216) then for v363=v217 + 1 ,v92[4] do v218=v218   .. v90[v363] ;end v90[v92[2]]=v218;break;end if (v216==0) then v217=v92[862 -(814 + 45) ];v218=v90[v217];v216=1;end end end elseif (v93<=(184 -109)) then for v229=v92[2],v92[1 + 2 ] do v90[v229]=nil;end elseif (v93>(27 + 49)) then local v294=v92[2];local v295,v296=v83(v90[v294](v21(v90,v294 + 1 ,v92[3])));v85=(v296 + v294) -1 ;local v297=885 -(261 + 624) ;for v335=v294,v85 do local v336=0;while true do if (v336==0) then v297=v297 + 1 ;v90[v335]=v295[v297];break;end end end else local v298=v92[2];local v299=v90[v298];for v337=v298 + 1 ,v85 do v15(v299,v90[v337]);end end elseif (v93<=80) then if (v93<=78) then local v219=v92[2];v90[v219](v21(v90,v219 + 1 ,v85));elseif (v93>79) then local v300=0;local v301;while true do if (v300==0) then v301=v92[2];v90[v301]=v90[v301]();break;end end else local v302=0;local v303;local v304;local v305;while true do if (v302==1) then v305={};v304=v18({},{[v7("\224\22\137\88\95\218\49","\59\191\73\224\54")]=function(v404,v405) local v406=v305[v405];return v406[1][v406[2]];end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v407,v408,v409) local v410=0;local v411;while true do if (v410==0) then v411=v305[v408];v411[1][v411[2]]=v409;break;end end end});v302=2;end if (0==v302) then v303=v81[v92[4 -1 ]];v304=nil;v302=1;end if (2==v302) then for v412=1,v92[1084 -(1020 + 60) ] do local v413=0;local v414;while true do if (v413==1) then if (v414[1424 -(630 + 793) ]==30) then v305[v412-1 ]={v90,v414[3]};else v305[v412-1 ]={v73,v414[2 + 1 ]};end v89[ #v89 + 1 ]=v305;break;end if (v413==0) then v84=v84 + 1 ;v414=v80[v84];v413=1;end end end v90[v92[2]]=v40(v303,v304,v74);break;end end end elseif (v93<=81) then do return;end elseif (v93>82) then local v306=v92[2];v90[v306](v90[v306 + 1 ]);else local v307=v92[2];local v308=v90[v307];local v309=v92[9 -6 ];for v338=1,v309 do v308[v338]=v90[v307 + v338 ];end end v84=v84 + (1748 -(760 + 987)) ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
